// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  firstName   String
  lastName    String
  email       String        @unique
  createdAt   DateTime      @default(now())
  summary     Summary[]
  incomes     Income[]
  outgoings   Outgoing[]
  Saving      Saving[]
  Expenditure Expenditure[]
}

model Income {
  id           String    @id @default(cuid())
  amount       Decimal   @default("0")
  createdAt    DateTime  @default(now())
  userId       String
  categoryId   String
  notes        String?
  expectedDate DateTime?
  actualDate   DateTime?
  user         User      @relation(fields: [userId], references: [id])
  category     Category  @relation(fields: [categoryId], references: [id])
}

model Outgoing {
  id           String    @id @default(cuid())
  amount       Decimal   @default("0")
  actualAmount Decimal   @default("0")
  createdAt    DateTime  @default(now())
  userId       String
  categoryId   String
  name         String
  completed    Boolean   @default(false)
  notes        String?
  expectedDate DateTime?
  actualDate   DateTime?
  user         User      @relation(fields: [userId], references: [id])
  category     Category  @relation(fields: [categoryId], references: [id])
}

model Saving {
  id             String    @id @default(cuid())
  amount         Decimal   @default("0")
  expectedAmount Decimal?  @default("0")
  actualAmount   Decimal?  @default("0")
  name           String
  completed      Boolean   @default(false)
  expectedDate   DateTime?
  actualDate     DateTime?
  categoryId     String
  createdAt      DateTime  @default(now())
  userId         String
  notes          String?
  user           User      @relation(fields: [userId], references: [id])
  category       Category  @relation(fields: [categoryId], references: [id])
}

model Expenditure {
  id           String    @id @default(cuid())
  amount       Decimal   @default("0")
  actualAmount Decimal   @default("0")
  createdAt    DateTime  @default(now())
  userId       String
  categoryId   String
  name         String
  completed    Boolean   @default(false)
  notes        String?
  expectedDate DateTime?
  actualDate   DateTime?
  user         User      @relation(fields: [userId], references: [id])
  category     Category  @relation(fields: [categoryId], references: [id])
}

model Category {
  id          String        @id @default(cuid())
  name        String
  type        CategoryType
  createdAt   DateTime      @default(now())
  incomes     Income[]
  outgoings   Outgoing[]
  Saving      Saving[]
  Expenditure Expenditure[]
}

enum CategoryType {
  INCOME
  OUTGOING
  SAVING
}

model Summary {
  id          String   @id @default(cuid())
  income      Decimal  @default("0")
  outgoing    Decimal  @default("0")
  expenditure Decimal  @default("0")
  saving      Decimal  @default("0")
  net         Decimal  @default("0")
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
  userId      String
  User        User?    @relation(fields: [userId], references: [id])
}
